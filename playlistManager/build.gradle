// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.


if (!hasProperty('mainClass')) {
    ext.mainClass = 'src.PlaylistManager'
}


apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'playlistManager'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
    maven {url "https://jitpack.io"}
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
  }
}
apply plugin: "com.github.johnrengelman.shadow"

dependencies {
    compile 'com.google.api-client:google-api-client:1.25.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.25.0'
    compile 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'
    implementation 'com.github.sealedtx:java-youtube-downloader:2.1.1'
}

tasks.build.dependsOn tasks.shadowJar

jar {
    manifest {attributes 'Main-Class': 'src.PlaylistManager'}
    from {
        configurations.compile.collect { 
            it.isDirectory() ? it : zipTree(it) 
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'src.PlaylistManager'
    }
    baseName = 'PlaylistManager'
    from { 
        configurations.compile.collect { 
            it.isDirectory() ? it : zipTree(it) 
        } 
    }
    
    with jar
}